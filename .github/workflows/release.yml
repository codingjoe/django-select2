name: Release

on:
  release:
    types: [published]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write # For trusted publishing to PyPI

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for hatch-vcs versioning

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Build package
        run: uv build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Optionally use API token instead of trusted publishing:
        # with:
        #   password: ${{ secrets.PYPI_API_TOKEN }}

  npm-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Sync package.json version with Python version
        run: |
          # Use hatch to get the version instead of setuptools_scm
          VERSION=$(uv run python -c "from importlib.metadata import version; print(version('django-tomselect2'))")
          npm version $VERSION --no-git-tag-version

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
